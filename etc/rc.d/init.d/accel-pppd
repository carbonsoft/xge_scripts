#!/bin/bash
# chkconfig: - 81 15
# description: Main worker

. /etc/rc.d/init.d/functions
. /cfg/config

ALREADY_RUN=111
RETVAL=1
prog="accel-pppd"
PROG="accel-pppd"
LOCKFILE="/var/lock/subsys/$PROG"
config=/etc/accel-ppp.conf

copy_kernel_module() {
	src_kernel_module="/usr/share/pptp.ko"
	dst_kernel_module="/lib/modules/$(uname -r)/kernel/extra/pptp.ko"
	lsmod | grep -wq pptp && return 0
	[ -f "$dst_kernel_module" ] && cmp "$src_kernel_module" "$dst_kernel_module" && return 0
	mkdir "${dst_kernel_module%/*}"
	cp -p "$src_kernel_module" "$dst_kernel_module"
	depmod -a
}

insert_kernel_module() {
	if ! lsmod | grep -wq pptp; then
		depmod -a
		# стартуем чтобы загрузить модули, не более.
		# заставили эти чёртовы менеджеры, я бы разобрался как модпробить через kernel/proc
		[ ! -d /var/log/accel-ppp/ ] && mkdir -p /var/log/accel-ppp/
		/usr/local/sbin/$PROG -c $config -p  /var/run/$PROG.pid -d
		usleep 100000
		kill -KILL `pidof $PROG` &>/dev/null
		modprobe -f pptp
	fi
}

start() {
	[ "${vpn[enabled]}" = '1' ] || exit 255
	echo -n $"Starting $prog: "
	[ -s /var/run/$PROG.pid ] && return 0
	copy_kernel_module
	insert_kernel_module
	[ ! -d /var/log/accel-ppp/ ] && mkdir -p /var/log/accel-ppp/
	/usr/local/sbin/$PROG -c $config -p  /var/run/$PROG.pid -d
	RETVAL=$?
	pid=$!
	if [ "$RETVAL" = '0' ]; then
		touch $LOCKFILE
	fi
	[ "$RETVAL" != "0" ] && rm -f $LOCKFILE /var/run/$PROG.pid
	return $RETVAL
}

stop() {
	[ "${vpn[enabled]}" = '1' ] || exit 255
	echo -n $"Stopping $prog: "
	# todo kill -KILL ALL
	# killproc $PROG 2>/dev/null
	if [ -s /var/run/$PROG.pid ]; then
		pid="$(</var/run/$PROG.pid)" && kill $pid
		RETVAL=$?
		for i in {1..100}; do
		    [ ! -d /proc/$pid ] && break
		    echo -n .
		    usleep 100000
		done
	fi
	kill -KILL `pidof $PROG` &>/dev/null
	rm -f $LOCKFILE /var/run/$PROG.pid
	return $RETVAL
}

# See how we were called.
case "$1" in
	start)
		start
		RETVAL=$?
		[ "$RETVAL" = "0" ] && echo_success || echo_failure
		;;
	stop)
		stop
		RETVAL=$?
		[ "$RETVAL" = "0" ] && echo_success || echo_failure
		;;
	restart)
		[ "${vpn[enabled]}" = '1' ] || exit 255
		stop && echo_success || echo_failure
		echo
		start && echo_success || echo_failure
		;;
	condrestart)
		[ -e "$LOCKFILE" ] && restart
		RETVAL=$?
		;;
	status)
		status $proc
		RETVAL=$?
		;;
	*)  
		echo $"Usage: $0 {start|stop|status|restart|condrestart}"
		exit 1
		;;
esac
echo 
exit $RETVAL
