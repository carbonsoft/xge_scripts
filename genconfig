#!/bin/bash

if [ "$1" = "nochroot" ]; then
	rm -f /app/xge/etc/sysconfig/network-scripts/*
	cp -a /etc/sysconfig/network-scripts/* /app/xge/etc/sysconfig/network-scripts/
	exit 0
fi

export PATH=$PATH:/usr/local/bin/
CONFIG=/cfg/config
. $CONFIG

ip_regex='([0-9]{1,3}\.){3}[0-9]{1,3}'

genconfig() {
	while IFS= read -r line; do
		if [ "${line:0:1}" = "#"  ]; then
			echo "$line"
			continue
		fi
		while [[ "$line" = *@@@*%%%* ]]; do
			VARNAME=""
			VARNAME="${line#*@@@}"
			VARNAME="${VARNAME%%%%%*}"
			VARVALUE=""
			[ "$VARNAME" != "" ] && eval VARVALUE="\$$VARNAME"
			line="${line//@@@$VARNAME%%%/$VARVALUE}"
		done
		echo "$line"
	done < $tmpltfile >$conffile
}

get_first_local_ip() {
	ip -o addr | egrep  "L[a-z0-9]+\s*\<inet\>" | egrep -o -m1 $ip_regex
}

get_app_list() {
	tail -1 <<< "$(sed -re 's/^.*"apps": \[|].*$|[,"]//g;' /var/reg/*.reg)"
}

get_pppoe_interfaces() {
	for dev in $(network_parser lan_interfaces); do
		echo "interface=$dev,padi-limit=1000"
	done
}

gen_radius_config() {
	local first_ip="$(get_first_local_ip)"
	# radiusclient Ð¸ servers
	acctserver="${radclient['acctserver']}"
	authserver="${radclient['authserver']}"
	server_ip=${authserver%%:*}
	secret="${radclient['secret']}"
	nas_identifier="${radclient['nas_identifier']:-$first_ip}"
	coa_client_ip="${radclient['coa_client.ip']}"
	for sys_app in $(get_app_list); do
		if [ "$sys_app" = 'asr_billing' ]; then
			coa_client_ip="$nas_identifier"
		fi
	done
	coa_server_port="${radclient['coa_server.port']:-3799}"
	coa_client_passwd="${radclient['coa_client.passwd']}"

	conffile=/etc/radiusclient/servers
	tmpltfile=/skelet/etc/radiusclient/servers.tmplt
	genconfig

	conffile=/etc/radiusclient/radiusclient.conf
	tmpltfile=/skelet/etc/radiusclient/radiusclient.conf.tmplt
	genconfig

	conffile=/etc/raddb/radiusd.conf
	tmpltfile=/skelet/etc/raddb/radiusd.conf.tmplt
	genconfig

	conffile=/etc/raddb/clients.conf
	tmpltfile=/skelet/etc/raddb/clients.conf.tmplt
	genconfig
}

gen_hosts_file() {
	app_ip=${app[ppp-server.ip]%%/*}
	host_name=$(hostname)
	conffile=/etc/hosts
	tmpltfile=/skelet/etc/hosts.tmplt

	genconfig
}

gen_accel_pppd_config() {
	local first_ip="$(network_parser first_local_ip)"
	conffile=/etc/accel-ppp.conf
	tmpltfile=/skelet/etc/accel-ppp.conf.tmplt
	acctserver="${radclient[acctserver]}"
	authserver="${radclient[authserver]}"
	acctserver_ip=${acctserver%%:*}
	acctserver_port=${acctserver##*:}
	authserver_ip=${authserver%%:*}
	authserver_port=${authserver##*:}
	server_ip=${authserver%%:*}
	secret="${radclient[secret]}"
	nas_identifier="${radclient[nas_identifier]:-$first_ip}"
	ppp_server_ip=${app['ppp-server.ip']}
	interface="$(get_pppoe_interfaces)"

	for ip in ${app['ppp-server.ip']}/32 $nas_identifier/8; do
		if ! ip -4 a | egrep -q " ${ip%/*}/[0-9][0-9]*"; then
			ip addr add $ip dev dummy0
		fi
	done &>/dev/null

	[ "${vpn['pptp.enabled']}" = '1' ] && pptp_string=pptp
	[ "${vpn['pppoe.enabled']}" = '1' ] && pppoe_string=pppoe
	[ "${vpn['l2tp.enabled']}" = '1' ] && l2tp_string=l2tp
	[ "${vpn['auth.pap']}" = '1' ] && pap_string=auth_pap
	[ "${vpn['auth.chap_md5']}" = '1' ] && chap_md5_string=auth_chap_md5
	[ "${vpn['auth.mschap1']}" = '1' ] && mschap1_string=auth_mschap_v1
	[ "${vpn['auth.mschap2']}" = '1' ] && mschap2_string=auth_mschap_v2
	hostname="xge_$( hostname )"

	genconfig
}

gen_httpd_config() {
	conffile=/etc/httpd/conf/httpd.conf
	tmpltfile=/skelet/etc/httpd/conf/httpd.conf.tmplt

	internal_httpd_ip_port=${httpd['internal_ip']}:80
	redirect_httpd_ip_port=${httpd['redirect_ip']}:80
	noauth_httpd_ip_port=${httpd['redirect_noauth_ip']}:80
	webauth_httpd_ip_port=${httpd['redirect_webauth_ip']}:80

	for i in internal_ip redirect_ip redirect_noauth_ip redirect_webauth_ip; do
		ip addr add ${httpd[$i]}/8 dev dummy0
	done &>/dev/null
	genconfig

	# redirect part
	URL="${httpd['redirect_page']}"
	conffile="/var/www/html/redirect/.htaccess"
	tmpltfile="/skelet/var/www/html/redirect/.htaccess.tmplt"
	genconfig

	# noauth part
	URL="${httpd['redirect_noauth_page']}"
	conffile="/var/www/html/noauth/.htaccess"
	tmpltfile="/skelet/var/www/html/noauth/.htaccess.tmplt"
	genconfig

	# webauth part
	URL="${httpd['redirect_webauth_page']}"
	conffile="/var/www/html/webauth/.htaccess"
	tmpltfile="/skelet/var/www/html/webauth/.htaccess.tmplt"
	genconfig

	authserver="${radclient[authserver]}"
	auth_port=${authserver##*:}
	server=${authserver%%:*}
	secret="${radclient[secret]}"
	users_psw="${radclient[users_psw]}"
	conffile="/var/www/html/noauth/noauth.php"
	tmpltfile="/skelet/var/www/html/noauth/noauth.php.tmplt"
	genconfig
}



gen_named_conf() {
	leth_list="$(network_parser lan_ip)"
	if [ "${vpn['enabled']}" = '1' ]; then
		leth_list="$leth_list ${app['ppp-server.ip']}"
	fi
	leth_list="$(echo $leth_list | sed -re 's/\s|$/;&/g')"
	conffile=/etc/named.conf
	tmpltfile=/skelet/etc/named.conf.tmplt

	genconfig
}

main() {
	gen_httpd_config
	gen_accel_pppd_config
	gen_radius_config
	gen_hosts_file
	gen_named_conf
}

main $@
